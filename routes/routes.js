const express = require("express");
const mysql = require("mysql");
const router = express.Router();
const dotenv = require("dotenv").config();
const cors = require("cors");
const { getInfo, verifySignature } = require("../stellar");
const StellarSdk = require("stellar-sdk");
const { SecretKey } = require("../stellar");

const connection = mysql.createConnection({
  host: process.env.DATABASE_HOST,
  database: process.env.DATABASE_NAME,
  user: process.env.DATABASE_USERNAME,
  password: process.env.DATABASE_PASSWORD,
  port: 3306
});

var corsOptions = {
  origin: "http://localhost:3001",
  optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204
};

console.log("Connecting...");
connection.connect(function(err) {
  if (err) return new Error("An error occured during SQL connection " + err);
  console.log("Connected!");
});
console.log(connection.config);

async function verify(doc_spk, signature, _id, callback) {
  const querycmd =
    "SELECT * FROM STELLARKEY WHERE STELLARKEY.CID = " + _id + ";";
  connection.query(querycmd, async function(error, results) {
    if (error) {
      return callback(new Error("An error occured during query " + error));
    }
    if (!verifySignature(doc_spk, signature, _id)) {
      console.log("Signature fail for DOCTOR SPK: " + doc_spk);
      return callback(false);
    }
    const Info = await getInfo(results[0].SPK, results[0].SecretKey);
    var hasDoc = false;
    var hasSig = false;
    const KP = StellarSdk.Keypair.fromSecret(SecretKey);
    console.log(Info);
    for (var it = Info.values(), val = null; (val = it.next().value); ) {
      const valJson = JSON.parse(val);
      if (valJson.Type == "Doctor" && valJson.SPK == doc_spk) {
        hasDoc = true;
      }
      if (valJson.Type == "Signature") {
        hasSig =
          KP.sign(Buffer.from(_id + results[0].SPK)).toString("base64") ==
          valJson.Value;
      }
      if (hasSig && hasDoc) {
        return callback(true);
      }
    }
    return callback(false);
  });
}
router.post("/test", async function(req, res) {
  verify(req.body.SPK, req.body.signature, req.body._id, function(result) {
    console.log(result);
    if (result) res.json("OK");
    else res.json("Fail");
  });
});

/* GET home page. */
router.get("/", function(req, res, next) {
  if (connection.state === "disconnected") {
    console.error("no SQL connection");
    process.exit(1);
  }
  res.render("index", {
    title: "TEST HOS API"
  });
});

router.post("/TABLE/", function(req, res, next) {
  var ID = req.body.ID;
  var PID = req.body.PID;
  var TABLE = req.body.TABLE;
  var querycmd = "SELECT * FROM " + TABLE + " ";
  if (ID) querycmd = querycmd + " WHERE ID=" + ID;
  if (PID) querycmd = querycmd + " WHERE PID=" + PID;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/ACCIDENT/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT ACCIDENT.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME,ACCIDENT.HOSPCODE,ACCIDENT.PID,ACCIDENT.SEQ,ACCIDENT.DATETIME_SERV,CODE_ACCIDENT_AEPLACE.DESCRIPTION AS AEPLACE,CODE_ACCIDENT_AETYPE.DESCRIPTION_TH AS AETYPE,CODE_ACCIDENT_AIRWAY.DESCRIPTION AS AIRWAY,CODE_ACCIDENT_ALCOHOL.DESCRIPTION AS ALCOHOL,CODE_ACCIDENT_BELT.DESCRIPTION AS BELT,CODE_ACCIDENT_COMA_EYE.DESCRIPTION AS COMA_EYE,CODE_ACCIDENT_COMA_MOVEMENT.DESCRIPTION AS COMA_MOVEMENT,CODE_ACCIDENT_COMA_SPEAK.DESCRIPTION AS COMA_SPEAK,CODE_ACCIDENT_FLUID.DESCRIPTION AS FLUID,CODE_ACCIDENT_HELMET.DESCRIPTION AS HELMET,CODE_ACCIDENT_NACROTIC_DRUG.DESCRIPTION AS NACROTIC_DRUG,CODE_ACCIDENT_SPLINT.DESCRIPTION AS SPLINT,CODE_ACCIDENT_STOPBLEED.DESCRIPTION AS STOPBLEED,CODE_ACCIDENT_TRAFFIC.DESCRIPTION AS TRAFFIC,CODE_ACCIDENT_TYPEIN_AE.DESCRIPTION AS TYPEIN_AE,CODE_ACCIDENT_URGENCY.DESCRIPTION AS URGENCY,CODE_ACCIDENT_VEHICLE.DESCRIPTION AS VEHICLE,ACCIDENT.D_UPDATE,ACCIDENT.START_DATE FROM ACCIDENT LEFT JOIN CODE_ACCIDENT_AETYPE ON ACCIDENT.AETYPE=CODE_ACCIDENT_AETYPE.CODE LEFT JOIN CODE_ACCIDENT_AEPLACE ON ACCIDENT.AEPLACE=CODE_ACCIDENT_AEPLACE.CODE LEFT JOIN CODE_ACCIDENT_AIRWAY ON ACCIDENT.AIRWAY=CODE_ACCIDENT_AIRWAY.CODE LEFT JOIN CODE_ACCIDENT_ALCOHOL ON ACCIDENT.ALCOHOL=CODE_ACCIDENT_ALCOHOL.CODE LEFT JOIN CODE_ACCIDENT_BELT ON ACCIDENT.BELT=CODE_ACCIDENT_BELT.CODE LEFT JOIN CODE_ACCIDENT_COMA_EYE ON ACCIDENT.COMA_EYE=CODE_ACCIDENT_COMA_EYE.CODE LEFT JOIN CODE_ACCIDENT_COMA_MOVEMENT ON ACCIDENT.COMA_MOVEMENT=CODE_ACCIDENT_COMA_MOVEMENT.CODE LEFT JOIN CODE_ACCIDENT_COMA_SPEAK ON ACCIDENT.COMA_SPEAK=CODE_ACCIDENT_COMA_SPEAK.CODE LEFT JOIN CODE_ACCIDENT_FLUID ON ACCIDENT.FLUID=CODE_ACCIDENT_FLUID.CODE LEFT JOIN CODE_ACCIDENT_HELMET ON ACCIDENT.HELMET=CODE_ACCIDENT_HELMET.CODE LEFT JOIN CODE_ACCIDENT_NACROTIC_DRUG ON ACCIDENT.NACROTIC_DRUG=CODE_ACCIDENT_NACROTIC_DRUG.CODE LEFT JOIN CODE_ACCIDENT_SPLINT ON ACCIDENT.SPLINT=CODE_ACCIDENT_SPLINT.CODE LEFT JOIN CODE_ACCIDENT_STOPBLEED ON ACCIDENT.STOPBLEED=CODE_ACCIDENT_STOPBLEED.CODE LEFT JOIN CODE_ACCIDENT_TRAFFIC ON ACCIDENT.TRAFFIC=CODE_ACCIDENT_TRAFFIC.CODE LEFT JOIN CODE_ACCIDENT_TYPEIN_AE ON ACCIDENT.TYPEIN_AE=CODE_ACCIDENT_TYPEIN_AE.CODE LEFT JOIN CODE_ACCIDENT_URGENCY ON ACCIDENT.URGENCY=CODE_ACCIDENT_URGENCY.CODE LEFT JOIN CODE_ACCIDENT_VEHICLE ON ACCIDENT.VEHICLE=CODE_ACCIDENT_VEHICLE.CODE LEFT JOIN CODE_HOSPITAL ON ACCIDENT.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd =
      querycmd + " WHERE ID=" + ID + " && ACCIDENT.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && ACCIDENT.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/ADMISSION/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT ADMISSION.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, ADMISSION.HOSPCODE, ADMISSION.PID, ADMISSION.SEQ, ADMISSION.AN, ADMISSION.DATETIME_ADMIT, ADMISSION.WARDADMIT, CODE_ADMISSION_TYPEIN.DESCRIPTION AS TYPEIN, CODE_ADMISSION_CAUSEIN.DESCRIPTION AS CAUSEIN, ADMISSION.ADMITWEIGHT, ADMISSION.ADMITHEIGHT, ADMISSION.DATETIME_DISCH, ADMISSION.WARDDISCH, CODE_ADMISSION_DISCHSTATUS.DESCRIPTION AS DISCHSTATUS, CODE_ADMISSION_DISCHTYPE.DESCRIPTION AS DISCHTYPE, CODE_ADMISSION_CAUSEOUT.DESCRIPTION AS CAUSEOUT, ADMISSION.PRICE FROM ADMISSION LEFT JOIN CODE_ADMISSION_CAUSEIN ON ADMISSION.CAUSEIN=CODE_ADMISSION_CAUSEIN.CODE LEFT JOIN CODE_ADMISSION_CAUSEOUT ON ADMISSION.CAUSEOUT=CODE_ADMISSION_CAUSEOUT.CODE LEFT JOIN CODE_ADMISSION_DISCHSTATUS ON ADMISSION.DISCHSTATUS=CODE_ADMISSION_DISCHSTATUS.CODE LEFT JOIN CODE_ADMISSION_DISCHTYPE ON ADMISSION.DISCHTYPE=CODE_ADMISSION_DISCHTYPE.CODE LEFT JOIN CODE_ADMISSION_TYPEIN ON ADMISSION.TYPEIN=CODE_ADMISSION_TYPEIN.CODE LEFT JOIN CODE_HOSPITAL ON ADMISSION.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd =
      querycmd + " WHERE ID=" + ID + " && ADMISSION.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && ADMISSION.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/APPOINTMENT/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT APPOINTMENT.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, APPOINTMENT.HOSPCODE, APPOINTMENT.PID, APPOINTMENT.SEQ, CODE_CLINIC.DESCRIPTION AS CLINIC, APPOINTMENT.DATE_SERV, APPOINTMENT.APDATE, CODE_APPOINTMENT_APTYPE.DESCRIPTION AS APTYPE, CODE_APPOINTMENT_APDIAG.DESCRIPTION AS APDIAG, APPOINTMENT.PROVIDER FROM APPOINTMENT LEFT JOIN CODE_APPOINTMENT_APDIAG ON APPOINTMENT.APDIAG=CODE_APPOINTMENT_APDIAG.CODE LEFT JOIN CODE_APPOINTMENT_APTYPE ON APPOINTMENT.APTYPE=CODE_APPOINTMENT_APTYPE.CODE LEFT JOIN CODE_CLINIC ON APPOINTMENT.CLINIC=CODE_CLINIC.CODE LEFT JOIN CODE_HOSPITAL ON APPOINTMENT.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd =
      querycmd + " WHERE ID=" + ID + " && APPOINTMENT.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && APPOINTMENT.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/CHRONIC/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT CHRONIC.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, CHRONIC.HOSPCODE, CHRONIC.PID, CHRONIC.DATE_DIAG, CODE_CHRONIC_CHRONIC.DESCRIPTION AS CHRONIC, CHRONIC.HOSP_DX, CHRONIC.HOSP_RX, CHRONIC.DATE_DISCH, CODE_CHRONIC_TYPEDISCH.DESCRIPTION AS TYPEDISCH FROM CHRONIC LEFT JOIN CODE_CHRONIC_CHRONIC ON CHRONIC.CHRONIC=CODE_CHRONIC_CHRONIC.CODE LEFT JOIN CODE_CHRONIC_TYPEDISCH ON CHRONIC.TYPEDISCH=CODE_CHRONIC_TYPEDISCH.CODE LEFT JOIN CODE_HOSPITAL ON CHRONIC.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd =
      querycmd + " WHERE ID=" + ID + " && CHRONIC.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && CHRONIC.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/DRUG_OPD/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT DRUG_OPD.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, DRUG_OPD.HOSPCODE, DRUG_OPD.PID, DRUG_OPD.SEQ, DRUG_OPD.DATE_SERV, CODE_CLINIC.DESCRIPTION AS CLINIC, CODE_DIDSTD.DRUGNAME AS DRUGNAME, CODE_DIDSTD.DGDSFNM AS COMSUME, CODE_DIDSTD.COMP AS DCOMP, DRUG_OPD.DNAME, DRUG_OPD.AMOUNT, CODE_DRUGUNIT.DESCRIPTION AS DUNIT, DRUG_OPD.UNIT_PACKING, DRUG_OPD.DRUGPRICE, DRUG_OPD.DRUGCOST, PROVIDER.PRENAME AS PROV_PRENAME, PROVIDER.NAME AS PROV_NAME, PROVIDER.LNAME AS PROV_LNAME, DRUG_OPD.PROVIDER AS PROV_NO FROM DRUG_OPD LEFT JOIN CODE_DIDSTD ON DRUG_OPD.DIDSTD=CODE_DIDSTD.STD_CODE LEFT JOIN CODE_DRUGUNIT ON DRUG_OPD.UNIT=CODE_DRUGUNIT.CODE LEFT JOIN CODE_CLINIC ON DRUG_OPD.CLINIC=CODE_CLINIC.CODE LEFT JOIN PROVIDER ON DRUG_OPD.PROVIDER=PROVIDER.PROVIDER LEFT JOIN CODE_HOSPITAL ON DRUG_OPD.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd =
      querycmd + " WHERE ID=" + ID + " && DRUG_OPD.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && DRUG_OPD.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/PERSON/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT PERSON.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, PERSON.HOSPCODE, PERSON.CID, PERSON.PID, CODE_PERSON_PRENAME.ABBREV AS PRENAME, PERSON.NAME, PERSON.LNAME, CODE_SEX.DESCRIPTION AS SEX, PERSON.BIRTH, CODE_PERSON_MSTATUS.DESCRIPTION AS MSTATUS, CODE_PERSON_OCCUPATION_OLD.DESCRIPTION AS OCCUPATION_OLD, CODE_PERSON_OCCUPATION_NEW.DESCRIPTION AS OCCUPATION_NEW, CODE_PERSON_NATION.DESCRIPTION AS NATION, CODE_PERSON_RELIGION.DESCRIPTION AS RELIGION, CODE_PERSON_EDUCATION.DESCRIPTION AS EDUCATION, CODE_PERSON_FSTATUS.DESCRIPTION AS FSTATUS, CODE_PERSON_VSTATUS.DESCRIPTION AS VSTATUS, PERSON.MOVEIN, CODE_PERSON_DISCHARGE.DESCRIPTION AS DISCHARGE, PERSON.DDISCHARGE, CODE_PERSON_ABOGROUP.DESCRIPTION AS ABOGROUP, CODE_PERSON_RHGROUP.DESCRIPTION AS RHGROUP, CODE_PERSON_LABOR.DESCRIPTION AS LABOR, CODE_PERSON_TYPEAREA.DESCRIPTION AS TYPEAREA FROM PERSON LEFT JOIN CODE_PERSON_ABOGROUP ON PERSON.ABOGROUP=CODE_PERSON_ABOGROUP.CODE LEFT JOIN CODE_PERSON_DISCHARGE ON PERSON.DISCHARGE=CODE_PERSON_DISCHARGE.CODE LEFT JOIN CODE_PERSON_EDUCATION ON PERSON.EDUCATION=CODE_PERSON_EDUCATION.CODE LEFT JOIN CODE_PERSON_FSTATUS ON PERSON.FSTATUS=CODE_PERSON_FSTATUS.CODE LEFT JOIN CODE_PERSON_LABOR ON PERSON.LABOR=CODE_PERSON_LABOR.CODE LEFT JOIN CODE_PERSON_MSTATUS ON PERSON.MSTATUS=CODE_PERSON_MSTATUS.CODE LEFT JOIN CODE_PERSON_NATION ON PERSON.NATION=CODE_PERSON_NATION.CODE LEFT JOIN CODE_PERSON_OCCUPATION_NEW ON PERSON.OCCUPATION_NEW=CODE_PERSON_OCCUPATION_NEW.CODE LEFT JOIN CODE_PERSON_OCCUPATION_OLD ON PERSON.OCCUPATION_OLD=CODE_PERSON_OCCUPATION_OLD.CODE LEFT JOIN CODE_PERSON_PRENAME ON PERSON.PRENAME=CODE_PERSON_PRENAME.CODE LEFT JOIN CODE_PERSON_RELIGION ON PERSON.RELIGION=CODE_PERSON_RELIGION.CODE LEFT JOIN CODE_PERSON_RHGROUP ON PERSON.RHGROUP=CODE_PERSON_RHGROUP.CODE LEFT JOIN CODE_PERSON_TYPEAREA ON PERSON.TYPEAREA=CODE_PERSON_TYPEAREA.CODE LEFT JOIN CODE_PERSON_VSTATUS ON PERSON.VSTATUS=CODE_PERSON_VSTATUS.CODE LEFT JOIN CODE_SEX ON PERSON.SEX=CODE_SEX.CODE LEFT JOIN CODE_HOSPITAL ON PERSON.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd = querycmd + " WHERE ID=" + ID + " && PERSON.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && PERSON.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/PERSONAL/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var PID = req.body.PID;
  var result = {};
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var query_person =
    "SELECT PERSON.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, PERSON.HOSPCODE, PERSON.CID, PERSON.PID, CODE_PERSON_PRENAME.ABBREV AS PRENAME, PERSON.NAME, PERSON.LNAME, CODE_SEX.DESCRIPTION AS SEX, PERSON.BIRTH, CODE_PERSON_MSTATUS.DESCRIPTION AS MSTATUS, CODE_PERSON_OCCUPATION_OLD.DESCRIPTION AS OCCUPATION_OLD, CODE_PERSON_OCCUPATION_NEW.DESCRIPTION AS OCCUPATION_NEW, CODE_PERSON_NATION.DESCRIPTION AS NATION, CODE_PERSON_RELIGION.DESCRIPTION AS RELIGION, CODE_PERSON_EDUCATION.DESCRIPTION AS EDUCATION, CODE_PERSON_FSTATUS.DESCRIPTION AS FSTATUS, CODE_PERSON_VSTATUS.DESCRIPTION AS VSTATUS, PERSON.MOVEIN, CODE_PERSON_DISCHARGE.DESCRIPTION AS DISCHARGE, PERSON.DDISCHARGE, CODE_PERSON_ABOGROUP.DESCRIPTION AS ABOGROUP, CODE_PERSON_RHGROUP.DESCRIPTION AS RHGROUP, CODE_PERSON_LABOR.DESCRIPTION AS LABOR, CODE_PERSON_TYPEAREA.DESCRIPTION AS TYPEAREA FROM PERSON LEFT JOIN CODE_PERSON_ABOGROUP ON PERSON.ABOGROUP=CODE_PERSON_ABOGROUP.CODE LEFT JOIN CODE_PERSON_DISCHARGE ON PERSON.DISCHARGE=CODE_PERSON_DISCHARGE.CODE LEFT JOIN CODE_PERSON_EDUCATION ON PERSON.EDUCATION=CODE_PERSON_EDUCATION.CODE LEFT JOIN CODE_PERSON_FSTATUS ON PERSON.FSTATUS=CODE_PERSON_FSTATUS.CODE LEFT JOIN CODE_PERSON_LABOR ON PERSON.LABOR=CODE_PERSON_LABOR.CODE LEFT JOIN CODE_PERSON_MSTATUS ON PERSON.MSTATUS=CODE_PERSON_MSTATUS.CODE LEFT JOIN CODE_PERSON_NATION ON PERSON.NATION=CODE_PERSON_NATION.CODE LEFT JOIN CODE_PERSON_OCCUPATION_NEW ON PERSON.OCCUPATION_NEW=CODE_PERSON_OCCUPATION_NEW.CODE LEFT JOIN CODE_PERSON_OCCUPATION_OLD ON PERSON.OCCUPATION_OLD=CODE_PERSON_OCCUPATION_OLD.CODE LEFT JOIN CODE_PERSON_PRENAME ON PERSON.PRENAME=CODE_PERSON_PRENAME.CODE LEFT JOIN CODE_PERSON_RELIGION ON PERSON.RELIGION=CODE_PERSON_RELIGION.CODE LEFT JOIN CODE_PERSON_RHGROUP ON PERSON.RHGROUP=CODE_PERSON_RHGROUP.CODE LEFT JOIN CODE_PERSON_TYPEAREA ON PERSON.TYPEAREA=CODE_PERSON_TYPEAREA.CODE LEFT JOIN CODE_PERSON_VSTATUS ON PERSON.VSTATUS=CODE_PERSON_VSTATUS.CODE LEFT JOIN CODE_SEX ON PERSON.SEX=CODE_SEX.CODE LEFT JOIN CODE_HOSPITAL ON PERSON.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE WHERE PID=" +
    PID +
    " && PERSON.HOSPCODE=" +
    HOSPCODE;
  console.log(query_person);
  connection.query(query_person, (err, PERSON) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    result.INFO = PERSON;
    var query_dis =
      "SELECT DISABILITY.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, DISABILITY.HOSPCODE, DISABILITY.DISABID, DISABILITY.PID, DISABILITY.DATE_DETECT, DISABILITY.DATE_DISAB, CODE_DISABILITY_DISABCAUSE.DESCRIPTION AS DISABCAUSE, CODE_DISABILITY_DISABTYPE.DESCRIPTION AS DISABTYPE FROM DISABILITY LEFT JOIN CODE_DISABILITY_DISABCAUSE ON DISABILITY.DISABCAUSE=CODE_DISABILITY_DISABCAUSE.CODE LEFT JOIN CODE_DISABILITY_DISABTYPE ON DISABILITY.DISABTYPE=CODE_DISABILITY_DISABTYPE.CODE LEFT JOIN CODE_HOSPITAL ON DISABILITY.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE WHERE PID=" +
      PID +
      " && DISABILITY.HOSPCODE=" +
      HOSPCODE;
    // console.log(query_dis);
    connection.query(query_dis, (err, DISABILITY) => {
      if (err) {
        return new Error("An error occured during query " + err);
      }
      result.DISABILITY = DISABILITY;
      var query_daller =
        "SELECT DRUGALLERGY.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, DRUGALLERGY.HOSPCODE, DRUGALLERGY.PID, DRUGALLERGY.DATERECORD, DRUGALLERGY.DNAME, CODE_DRUGALLERGY_TYPEDX.DESCRIPTION AS TYPEDX, CODE_DRUGALLERGY_INFORMANT.DESCRIPTION AS INFORMANT, CODE_DRUGALLERGY_ALEVEL.DESCRIPTION AS ALEVEL FROM DRUGALLERGY LEFT JOIN CODE_DRUGALLERGY_TYPEDX ON DRUGALLERGY.TYPEDX=CODE_DRUGALLERGY_TYPEDX.CODE LEFT JOIN CODE_DRUGALLERGY_INFORMANT ON DRUGALLERGY.INFORMANT=CODE_DRUGALLERGY_INFORMANT.CODE LEFT JOIN CODE_DRUGALLERGY_ALEVEL ON DRUGALLERGY.ALEVEL=CODE_DRUGALLERGY_ALEVEL.CODE LEFT JOIN CODE_HOSPITAL ON DRUGALLERGY.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE WHERE PID=" +
        PID +
        " && DRUGALLERGY.HOSPCODE=" +
        HOSPCODE;
      // console.log(query_daller);
      connection.query(query_daller, (err, DRUGALLERGY) => {
        if (err) {
          return new Error("An error occured during query " + err);
        }
        result.DRUGALLERGY = DRUGALLERGY;
        var query_chronic =
          "SELECT CHRONIC.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, CHRONIC.HOSPCODE, CHRONIC.PID, CHRONIC.DATE_DIAG, CODE_CHRONIC_CHRONIC.DESCRIPTION AS CHRONIC, CHRONIC.HOSP_DX, CHRONIC.HOSP_RX, CHRONIC.DATE_DISCH, CODE_CHRONIC_TYPEDISCH.DESCRIPTION AS TYPEDISCH FROM CHRONIC LEFT JOIN CODE_CHRONIC_CHRONIC ON CHRONIC.CHRONIC=CODE_CHRONIC_CHRONIC.CODE LEFT JOIN CODE_CHRONIC_TYPEDISCH ON CHRONIC.TYPEDISCH=CODE_CHRONIC_TYPEDISCH.CODE LEFT JOIN CODE_HOSPITAL ON CHRONIC.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE WHERE PID=" +
          PID +
          " && CHRONIC.HOSPCODE=" +
          HOSPCODE;
        // console.log(query_chronic);
        connection.query(query_chronic, (err, CHRONIC) => {
          if (err) {
            return new Error("An error occured during query " + err);
          }
          if (CHRONIC.length > 0) result.CHRONIC = CHRONIC[CHRONIC.length - 1];
          console.log(result);
          res.send(result);
        });
      });
    });
  });
});

router.post("/DISABILITY/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT DISABILITY.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, DISABILITY.HOSPCODE, DISABILITY.DISABID, DISABILITY.PID, DISABILITY.DATE_DETECT, DISABILITY.DATE_DISAB, CODE_DISABILITY_DISABCAUSE.DESCRIPTION AS DISABCAUSE, CODE_DISABILITY_DISABTYPE.DESCRIPTION AS DISABTYPE FROM DISABILITY LEFT JOIN CODE_DISABILITY_DISABCAUSE ON DISABILITY.DISABCAUSE=CODE_DISABILITY_DISABCAUSE.CODE LEFT JOIN CODE_DISABILITY_DISABTYPE ON DISABILITY.DISABTYPE=CODE_DISABILITY_DISABTYPE.CODE LEFT JOIN CODE_HOSPITAL ON DISABILITY.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd =
      querycmd + " WHERE ID=" + ID + " && DISABILITY.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && DISABILITY.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/DRUGALLERGY/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT DRUGALLERGY.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, DRUGALLERGY.HOSPCODE, DRUGALLERGY.PID, DRUGALLERGY.DATERECORD, DRUGALLERGY.DNAME, CODE_DRUGALLERGY_TYPEDX.DESCRIPTION AS TYPEDX, CODE_DRUGALLERGY_INFORMANT.DESCRIPTION AS INFORMANT, CODE_DRUGALLERGY_ALEVEL.DESCRIPTION AS ALEVEL FROM DRUGALLERGY LEFT JOIN CODE_DRUGALLERGY_TYPEDX ON DRUGALLERGY.TYPEDX=CODE_DRUGALLERGY_TYPEDX.CODE LEFT JOIN CODE_DRUGALLERGY_INFORMANT ON DRUGALLERGY.INFORMANT=CODE_DRUGALLERGY_INFORMANT.CODE LEFT JOIN CODE_DRUGALLERGY_ALEVEL ON DRUGALLERGY.ALEVEL=CODE_DRUGALLERGY_ALEVEL.CODE LEFT JOIN CODE_HOSPITAL ON DRUGALLERGY.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd =
      querycmd + " WHERE ID=" + ID + " && DRUGALLERGY.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && DRUGALLERGY.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/LAB/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT LABFU.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, LABFU.HOSPCODE, LABFU.PID, LABFU.SEQ, LABFU.DATE_SERV, LABFU.LABTEST AS LABID, CODE_LABFU_LABTEST.DESCRIPTION AS LABTEST, LABFU.LABRESULT FROM LABFU LEFT JOIN CODE_LABFU_LABTEST ON LABFU.LABTEST=CODE_LABFU_LABTEST.CODE LEFT JOIN CODE_HOSPITAL ON LABFU.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd = querycmd + " WHERE ID=" + ID + " && LABFU.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && LABFU.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/SERVICE/", function(req, res, next) {
  var HOSPCODE = req.body.HOSPCODE;
  var ID = req.body.ID;
  var PID = req.body.PID;
  if (!HOSPCODE) {
    res.send("HOSPCODE IS REQUIRED");
    return;
  }
  var querycmd =
    "SELECT SERVICE.ID, CODE_HOSPITAL.FULLNAME AS HOSNAME, SERVICE.HOSPCODE, SERVICE.PID, SERVICE.SEQ, SERVICE.DATE_SERV, SERVICE.TIME_SERV, CODE_INSTYPE.DESCRIPTION AS INSTYPE, SERVICE.INSID, CODE_TYPEIN.DESCRIPTION AS TYPEIN, CODE_SERVICE_CAUSEIN.DESCRIPTION AS CAUSEIN, SERVICE.CHIEFCOMP, SERVICE.BTEMP AS BODYTEMP, SERVICE.SBP AS SBLOODPRESSURE, SERVICE.DBP AS DBLOODPRESSURE, SERVICE.PR AS PULSERATE, SERVICE.RR AS RESPIRATORYRATE, CODE_SERVICE_TYPEOUT.DESCRIPTION AS TYPEOUT, SERVICE.PRICE, SERVICE.ACTUALPAY FROM SERVICE LEFT JOIN CODE_SERVICE_CAUSEIN ON SERVICE.CAUSEIN=CODE_SERVICE_CAUSEIN.CODE LEFT JOIN CODE_SERVICE_CAUSEOUT ON SERVICE.CAUSEOUT=CODE_SERVICE_CAUSEOUT.CODE LEFT JOIN CODE_SERVICE_TYPEOUT ON SERVICE.TYPEOUT=CODE_SERVICE_TYPEOUT.CODE LEFT JOIN CODE_INSTYPE ON SERVICE.INSTYPE=CODE_INSTYPE.CODE LEFT JOIN CODE_TYPEIN ON SERVICE.TYPEIN=CODE_SERVICE_CAUSEIN.CODE LEFT JOIN CODE_HOSPITAL ON SERVICE.HOSPCODE=CODE_HOSPITAL.HOSPITALCODE ";
  if (ID)
    querycmd =
      querycmd + " WHERE ID=" + ID + " && SERVICE.HOSPCODE=" + HOSPCODE;
  if (PID)
    querycmd =
      querycmd + " WHERE PID=" + PID + " && SERVICE.HOSPCODE=" + HOSPCODE;
  console.log(querycmd);
  connection.query(querycmd, (err, results) => {
    if (err) {
      return new Error("An error occured during query " + err);
    }
    console.log(results);
    res.json(results);
  });
});

router.post("/secret/", cors(corsOptions), function(req, res, next) {
  var sql = "INSERT INTO STELLARKEY (CID, HOSPCODE, SPK, SecretKey) VALUES ?";
  var values = [
    [req.body.cid, req.body.HOSPCODE, req.body.spk, req.body.secretkey]
  ];
  connection.query(sql, [values], function(err, result) {
    if (err) console.log(err);
  });
});
module.exports = router;

// ACCIDENT D

// ADMISSION D

// APPOINTMENT D

// CHRONIC D

// DRUG_OPD D

// PERSONAL D
// 	DISABILITY D
// 	DRUGALLERGY D

// LAB D

// SERVICE D
